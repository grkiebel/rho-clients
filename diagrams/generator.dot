digraph example {
    rankdir=TB; // Set the rankdir attribute to LR
    compound=true;

    label = "Generator Structure";
    fontname="Arial";
    edge [
        color="blue", 
        style="ortho", 
        fontsize=10,
        fontname="Arial";
        // arrowhead="vee";
        arrowsize=0.6;
    ];
    splines=ortho
    concentrate=true

    node [
        shape="box", 
        fillcolor="white", 
        color="black", 
        fontname="Arial", 
        fontsize=10
    ];

    // Increase the spacing between subgraphs
    ranksep=1.5
    ; // Adjust the value as needed
    

    subgraph cluster_generator {
        style="rounded,filled";        
        label="generator";
        fillcolor="lightgrey";

        // color="red"
        fontsize=11
		node [style=filled,color=green, fillcolor=lightgreen];

        Generator;
        ApiGenerator;
        CmdGenerator;
        FileOutput;

        Generator -> ApiGenerator;
        Generator -> CmdGenerator;
        CmdGenerator -> FileOutput;
        ApiGenerator -> FileOutput;
    }

    subgraph cluster_definitions {
        style="rounded,filled";        
        label="definitions";
        fillcolor="white";
        color="black";
        fontsize=11
        fillcolor="lightgrey";
		node [style=filled,color=green,fillcolor=lightgreen];

        DefMain [shape=oval, label="Main"];
        Definitions
        Schema;    
    }

    // subgraph cluster_schema {
    //     style="rounded,filled";        
    //     label="Schema";
    //     fillcolor="white";
    //     color="black";
    //     fontsize=11
    //     fillcolor="lightgrey";
	// 	node [style=filled,color=green, fillcolor=lightgreen];


    // }

    subgraph cluster_builders {
        style="rounded,filled";        
        label="code_builders";
        fillcolor="white";
        color="black";
        fontsize=11
        fillcolor="lightgrey";
		node [style=filled,color=green, fillcolor=lightgreen];

        ApiBuilder;
        CmdBuilder;
    }

    subgraph cluster_source {
        style="rounded,filled,dotted"; // Add dotted outline        
        fontsize=9
        label="Source\n(OpenApi 3.10.1)";
        labelloc=b;
        fillcolor="white";
        color="black";

        node [shape=ellipse];
        // margin="15, 5";

        File;
        Service;
    }

    subgraph cluster_output {
        node [shape=ellipse];
        style="rounded,filled,dotted"; // Add dotted outline        
        fontsize=9
        label="Output Files";
        labelloc=b;
        fillcolor="white";
        color="black";

        api_file [label="g_api.py"];
        cmd_file [label="g_cmd.py"];
        // g_api.py;
        // g_cmd.py;
        // g_diagnostic.py;
    }


    // Service -> Schema;
    // File -> Schema;
    Generator -> DefMain;
    DefMain -> Definitions;
    DefMain -> Schema;
    ApiGenerator -> ApiBuilder;
    CmdGenerator -> CmdBuilder;
    Schema -> Service[style="dotted", label="⇧schema\n(json)"];
    Schema -> File[style="dotted", xlabel="⇧schema\n(json)"];

    FileOutput -> api_file;
    FileOutput -> cmd_file;

}
